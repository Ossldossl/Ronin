module ::= external_statement*
external_statement ::= import_statement | const_var_decl | function_decl

import_statement ::= 'import' string_literal ('as' ident)?

extern_content ::= ident (const_var_decl | impl)
const_var_decl ::= ident '::' (simple_expr | ('struct' struct_decl_body) | ('enum' enum_decl_body) | ('trait' trait_decl_body) | 'fn' function_decl)
struct_decl_body ::= '{' ident_type_pair ','? '}'
enum_decl_body ::= '{' (ident ('('ident')')?) (',' ident ('('ident')')?)* ','? '}'
trait_decl_body ::= '{' function_def* '}'
impl ::= 'impl' (impl_body | (ident impl_body))
impl_body ::= '{' function_decl* '}'
function_decl ::= ident '::' 'fn' '(' ident_type_pair* ')' ('->' ident)? block
ident_type_pair ::= (ident ':' ident) (',' ident ':' ident)*

block ::= '{' stmt* (expr)? '}'

keywords ::=  'fn' 
            | 'enum' 
            | 'struct' 
            | 'trait' 
            | 'impl'
            | 'import' 
            | 'defer'
            | 'for'
            | 'in'
            | 'while'
            | 'let'
            | 'null'